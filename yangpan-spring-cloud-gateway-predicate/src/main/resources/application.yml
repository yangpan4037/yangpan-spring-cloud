server:
  port: 8081
spring:
  profiles:
    active: after_route

# 当请求的时间在这个配置的时间之后，请求会被路由到http://httpbin.org:80/get
---
spring:
  cloud:
    gateway:
      routes:
      - id: after_route
        uri: http://httpbin.org:80/get
        predicates:
        - After=2019-01-20T17:42:47.789-07:00[America/Denver]
  profiles: after_route

# 当请求的Header中有X-Request-Id的header名，且header值为数字时，请求会被路由到配置的 uri.
---
spring:
  cloud:
    gateway:
      routes:
      - id: header_route
        uri: http://httpbin.org:80/get
        predicates:
        - Header=X-Request-Id, \d+
  profiles: header_route


# 请求带有cookie名为name, cookie值为forezp 的请求将都会转发到uri为 http://httpbin.org:80/get
---
spring:
  cloud:
    gateway:
      routes:
      - id: cookie_route
        uri: http://httpbin.org:80/get
        predicates:
        - Cookie=name, forezp
  profiles: cookie_route


# 请求头中含有Host为yangpan.site的请求将会被路由转发转发到配置的uri
  ---
  spring:
    cloud:
      gateway:
        routes:
        - id: host_route
          uri: http://httpbin.org:80/get
          predicates:
          - Host=**.yangpan.site
    profiles: host_route



# 所有的GET类型的请求都会路由转发到配置的uri
---
spring:
  cloud:
    gateway:
      routes:
      - id: method_route
        uri: http://httpbin.org:80/get
        predicates:
        - Method=GET
  profiles: method_route


# 所有的请求路径满足/foo/{segment}的请求将会匹配并被路由，比如/foo/1 、/foo/bar的请求，将会命中匹配，并成功转发
---
spring:
  cloud:
    gateway:
      routes:
      - id: path_route
        uri: http://httpbin.org:80/get
        predicates:
        - Path=/foo/{segment}
  profiles: path_route


# 配置了请求中含有参数foo，并且foo的值匹配ba.，则请求命中路由
---
spring:
  cloud:
    gateway:
      routes:
      - id: query_route
        uri: http://httpbin.org:80/get
        predicates:
        - Query=foo, ba.
  profiles: query_route1


# 请求的参数中含有配置的参数名，则命中路由
---
spring:
  cloud:
    gateway:
      routes:
      - id: query_route
        uri: http://httpbin.org:80/get
        predicates:
        - Query=foo
  profiles: query_route2

